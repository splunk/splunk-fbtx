## Assigns a rank to each entry depending on its severity and status. This rank can be used when identifying which intel overwrites other intel
[fb-tx-prioritize]
definition = fillnull value=UNKNOWN severity | fillnull value=UNKNOWN status| lookup fb-tx-priority-aggregation severity, status output rank
iseval = 0


## Aggregate FB-TX intel 
## Arg: bucketsize - number of seconds of the timeslot for each indicator, which defines the subset of entries that are going to be considered for a given indicator.  
## Arg: scopestart - unix timestamp from which point on intel should be considered for output - common value "now() - 2*bucketsize"
## Arg: typefilter - filter for the type field to reduce the amount of intel that need to be processed, e.g. "type=IP_ADDRESS"
## For each indicator we look at the latest intel as well as all intel for this indicator not older than latest intel - bucketsize.
## To run a full initial run, instead of a particial update, provide 0 for scopestart
## scopestart should be set to 0 when doing fully regenerating the result set, for incremental updates choose something similar to "now()-bucketsize-bucketsize"

#  Breakdown:
#  1. Get all intel from the KV collection
#  2. Filter for a given type; intel is within the timespan; is marked as share_level WHITE or GREEN
#  3. Add "most_recent" field to each intel based on its raw_indicator and type; "most_recent" holds the timestamp of the newest intel for this particular raw_indicator, type combination
#  3.1 Get all intel from the KV collection
#  3.2 Remove unneeded fields, reduce overhead
#  3.3 Filter for a given type; intel is within the timespan; is marked as share_level WHITE or GREEN; matching outter search criteria
#  3.4 Reduce result set to newest timestamp per raw_indicator, type combination
#  4. Filter intel that is older than $bucketsize$ starting from the timestamp of the newest intel of this raw_indicator, type combination
#  5. Lookup a rank depending on severity and status. severity outweights status
#  6. Filter out intel that have a lower rank than another intel with the same raw_indicator and type combination

[fb-tx-getintel(3)]
args = bucketsize,scopestart,typefilter
definition = from inputlookup:fb-tx-lookup | search ($typefilter$) AND time >= $scopestart$ AND (share_level=WHITE OR share_level=GREEN) | join raw_indicator, type [| inputlookup fb-tx-lookup | fields time, raw_indicator, type, share_level | search ($typefilter$) AND time >= $scopestart$ AND (share_level=WHITE OR share_level=GREEN) | stats max(time) as most_recent by raw_indicator, type] | where time>=most_recent-($bucketsize$) | `fb-tx-prioritize` | dedup 1 raw_indicator, type sortby -rank
iseval = 0


## See fb-tx-getintel(3) with a scopestart set to 0.
[fb-tx-getintel(2)]
args = bucketsize,typefilter
definition = `fb-tx-getintel(bucketsize=$bucketsize$, scopestart=0, typefilter=$typefilter$)`
iseval = 0

## See fb-tx-getintel(2) with a typefilter set to "*".
[fb-tx-getintel(1)]
args = bucketsize
definition = `fb-tx-getintel(bucketsize=$bucketsize$, typefilter="type=*")`
iseval = 0

[fb-tx-generate_intel_raw(1)]
args = typefilter
definition = `fb-tx-getintel(bucketsize=60*60*24*7, typefilter=$typefilter$)` | search status!="NON_MALICIOUS" | lookup fb-tx-weight severity output weight
iseval = 0

[fb-tx-generate_intel(1)]
args = typefilter
definition = `fb-tx-generate_intel_raw(typefilter=$typefilter$)` | fields description, raw_indicator, weight
iseval = 0